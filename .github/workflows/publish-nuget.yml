name: Publish NuGet Package

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --configuration Release --no-build
      
    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ./nupkgs
      
    - name: Push to NuGet
      run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Publish to GitHub Packages
      run: dotnet nuget push ./nupkgs/*.nupkg --source https://nuget.pkg.github.com/omarzawahry/index.json --api-key ${{ secrets.GITHUB_TOKEN }}
      if: success()

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: v${{ env.PACKAGE_VERSION }}
        name: Release v${{ env.PACKAGE_VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGE_VERSION: ${{ steps.get_version.outputs.version }}

    - name: Get current version
      id: get_version
      run: echo "version=$(grep -oP '<Version>\K[^<]+' Rejigs/Rejigs.csproj)" >> $GITHUB_OUTPUT

    - name: Increment version
      id: increment_version
      run: |
        IFS='.' read -ra VERSION_PARTS <<< "${{ steps.get_version.outputs.version }}"
        PATCH=$((VERSION_PARTS[2] + 1))
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Update version in csproj
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.increment_version.outputs.new_version }}<\/Version>/" Rejigs/Rejigs.csproj
        
    - name: Commit version update
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Bump version to ${{ steps.increment_version.outputs.new_version }}"
        file_pattern: "Rejigs/Rejigs.csproj"